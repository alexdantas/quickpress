#!/usr/bin/env ruby
#
# Quickpress main executable

require 'thor'
require 'quickpress'

# Has all the actions the executable does.
#
# This is a simple wrap-up above the `Quickpress` class.
#
class QP < Thor

  # new-post
  desc('new-post [FILENAME]',
       'Posts FILENAME or create new post on your Wordpress site')

  method_option 'markup', :banner => "markup language", :aliases => "-m"

  long_desc(<<-END)
    If FILENAME is given, will post it to your Wordpress site.

    If no FILENAME is given, will launch default text editor and
    prompt for a post.

    After it is written and saved, will post that to your Wordpress
    site.
  END
  def new_post(filename=nil)
    $options[:markup] = options[:markup]

    Quickpress::new(:post, filename)
  end

  # list-post
  desc('list-posts [COUNT]',
       'Shows last COUNT posts from Wordpress site')

  long_desc <<-END
    If COUNT is given, will show last COUNT posts from Wordpress site.

    If no COUNT is given, will show all posts, in reverse order of
    publication.
  END
  def list_post(ammount=0)
    Quickpress::list(:post, ammount.to_i)
  end

  # delete-post
  desc('delete-post ID',
       'Deletes post by ID')

  long_desc(<<-END)
    Deletes the post with numerical id equal to ID.

    If the post doesn't exist, do nothing.
  END
  def delete_post(ids)
    Quickpress::delete(:post, ids)
  end

  # new-page
  desc('new-page [FILENAME]',
       'Creates page FILENAME or write new page on your Wordpress site')

  method_option 'markup', :banner => "markup language", :aliases => "-m"

  long_desc <<-END
    If FILENAME is given, will send it as a page to your Wordpress site.

    If no FILENAME is given, will launch default text editor and
    prompt for a page.

    After it is written and saved, will page that to your Wordpress
    site.
  END
  def new_page(filename=nil)
    $options[:markup] = options[:markup]

    Quickpress::new(:page, filename)
  end

  # list-page
  desc 'list-pages [COUNT]', 'Shows last COUNT pages from Wordpress site'

  long_desc <<-END
    If COUNT is given, will show last COUNT pages from Wordpress site.

    If no COUNT is given, will show all pages, in reverse order of
    publication.
  END
  def list_page(ammount=0)
    Quickpress::list(:page, ammount.to_i)
  end

  # delete-page
  desc('delete-page ID',
       'Deletes page by ID')

  long_desc(<<-END)
    Deletes the page with numerical id equal to ID.

    If the page doesn't exist, do nothing.
  END
  def delete_page(ids)
    Quickpress::delete(:page, ids)
  end
end

# Press Start
begin
  if ARGV.empty?
    puts <<-END.gsub(/^ +/, "")
      $ qp {new,delete}-{post,page}
      $ qp list-(post|page)s

      Use `qp help` to see all commands.
      Also, try `qp help (command)`.
    END
    exit
  end

  Quickpress::config_init
  QP.start ARGV

  # real MESS of error-handling
  # I wonder if there's a better way to do it.
  #
  # Well, at least I'm not polluting the WHOLE CODE
  # with this STUFF
rescue Net::ReadTimeout
  $stderr.puts <<-END.gsub(/^ +/, "")

    * Connection took too long.
      Check your internet settings and try again.
  END
  exit 666

rescue XMLRPC::FaultException => e
  if e.message =~ /Incorrect username or password/

    $stderr.puts <<-END.gsub(/^ +/, "")

      * Incorrect username or password.
    END

  else
    $stderr.puts
    $stderr.puts e.message
  end
  exit 666

rescue ArgumentError => arg
  if arg.message =~ /Wrong protocol specified/
    $stderr.puts <<-END.gsub(/^ +/, "")
          * Wrong protocol at Wordpress site.
            Please use `http` or `https`.
        END
    exit 666
  end

rescue Interrupt => i
  $stderr.puts
  $stderr.puts "* You've interrupted me, mate"
  $stderr.puts i.backtrace
  exit 666

rescue StandardError => e

  if e.message =~ /Wrong content-type/
    $stderr.puts <<-END.gsub(/^ +/, "")
          * This doesn't seem to be a Wordpress site.
            Check the address again.
        END
    exit 666

  elsif e.message =~ /Name or service not known/
    $stderr.puts <<-END.gsub(/^ +/, "")

      * Connection error!
        Either site doesn't exist or there's
        something wrong with your internet connection.
    END

    if Quickpress::CLI::ask("Wanna retry?")
      puts
      retry
    end
    exit 666
  end

  $stderr.puts e
  $stderr.puts e.message
  $stderr.puts e.backtrace
  exit 666
end

