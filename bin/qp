#!/usr/bin/env ruby
#  ___    _     _   __    _     ___   ___   ____  __   __
# / / \  | | | | | / /`  | |_/ | |_) | |_) | |_  ( (` ( (`
# \_\_\\ \_\_/ |_| \_\_, |_| \ |_|   |_| \ |_|__ _)_) _)_)

require 'thor'
require 'quickpress'

# Command line interface above the `Quickpress` class.
#
class QP < Thor

  #  _      ____  _         ___   ___   __  _____
  # | |\ | | |_  \ \    /  | |_) / / \ ( (`  | |
  # |_| \| |_|__  \_\/\/   |_|   \_\_/ _)_)  |_|
  #
  desc('new-post [FILENAME]',
       'Creates a post on your Wordpress site')

  method_option('markup',
                :banner => "markup language",
                :aliases => "-m")

  long_desc(<<-END)
    If FILENAME is given, will post it to your Wordpress site.

    If no FILENAME is given, will launch default text editor and
    prompt for a post.

    After it is written and saved, will post that to your Wordpress
    site.
  END

  def new_post(filename=nil)
    $options[:markup] = options[:markup]

    Quickpress::new(:post, filename)
  end

  #  _     _   __  _____    ___   ___   __  _____  __
  # | |   | | ( (`  | |    | |_) / / \ ( (`  | |  ( (`
  # |_|__ |_| _)_)  |_|    |_|   \_\_/ _)_)  |_|  _)_)
  #
  desc('list-posts [COUNT]',
       'Shows last posts from Wordpress site')

  long_desc <<-END
    If COUNT is given, will show last COUNT posts,
    most recent first.

    If no COUNT is given, will show all posts.
  END

  def list_posts(ammount=0)
    Quickpress::list(:post, ammount.to_i)
  end

  #  ___   ____ _____  ____  _     ____    ___   ___   __  _____
  # | | \ | |_   | |  | |_  | |   | |_    | |_) / / \ ( (`  | |
  # |_|_/ |_|__  |_|  |_|__ |_|__ |_|__   |_|   \_\_/ _)_)  |_|
  #
  desc('delete-post ID',
       'Deletes post by ID')

  long_desc(<<-END)
    Deletes the post with numerical id equal to ID.

    To see IDs, use `qp list-posts`.

    You can specify multiple IDs, just make sure to
    keep them apart with commas.

    For example:

        $ qp delete-post "4,8,15,16,23,42"

    If the post doesn't exist, do nothing.
  END

  def delete_post(ids)
    Quickpress::delete(:post, ids)
  end

  #  _      ____  _         ___    __    __    ____
  # | |\ | | |_  \ \    /  | |_)  / /\  / /`_ | |_
  # |_| \| |_|__  \_\/\/   |_|   /_/--\ \_\_/ |_|__
  #
  desc('new-page [FILENAME]',
       'Creates a page on your Wordpress site')

  method_option('markup',
                :banner => "markup language",
                :aliases => "-m")

  long_desc <<-END
    If FILENAME is given, will send it as a page to your
    Wordpress site.

    If no FILENAME is given, will launch default text editor and
    prompt for a page.

    After it is written and saved, will page that to your Wordpress
    site.
  END

  def new_page(filename=nil)
    $options[:markup] = options[:markup]

    Quickpress::new(:page, filename)
  end

  #  _     _   __  _____    ___    __    __    ____  __
  # | |   | | ( (`  | |    | |_)  / /\  / /`_ | |_  ( (`
  # |_|__ |_| _)_)  |_|    |_|   /_/--\ \_\_/ |_|__ _)_)
  #
  desc('list-pages [COUNT]',
       'Shows last pages from Wordpress site')

  long_desc <<-END
    If COUNT is given, will show last COUNT pages,
    most recent first.

    If no COUNT is given, will show all pages.
  END

  def list_pages(ammount=0)
    Quickpress::list(:page, ammount.to_i)
  end

  #  ___   ____  _     ____ _____  ____    ___    __    __    ____
  # | | \ | |_  | |   | |_   | |  | |_    | |_)  / /\  / /`_ | |_
  # |_|_/ |_|__ |_|__ |_|__  |_|  |_|__   |_|   /_/--\ \_\_/ |_|__
  #
  desc('delete-page ID',
       'Deletes page by ID')

  long_desc(<<-END)
    Deletes the page with numerical id equal to ID.

    To see IDs, use `qp list-pages`.

    You can specify multiple IDs, just make sure to
    keep them apart with commas.

    For example:

        $ qp delete-page "42,666,1337"

    If the page doesn't exist, do nothing.
  END

  def delete_page(ids)
    Quickpress::delete(:page, ids)
  end

  #  _      ____  _         __   _  _____  ____
  # | |\ | | |_  \ \    /  ( (` | |  | |  | |_
  # |_| \| |_|__  \_\/\/   _)_) |_|  |_|  |_|__
  #
  desc('new-site',
       'Starts managing a Wordpress site.')

  long_desc <<-END
    Will prompt you for an address, username and password.
    If everything's correct, will add that site to quickpress.

    By adding we mean you'll be able to do all commands on it.

    To see all sites added to quickpress, see `qp list-sites`.
  END

  def new_site
    Quickpress::new_site
  end

  #  _     _   __  _____    __   _  _____  ____  __
  # | |   | | ( (`  | |    ( (` | |  | |  | |_  ( (`
  # |_|__ |_| _)_)  |_|    _)_) |_|  |_|  |_|__ _)_)
  #
  desc('list-sites',
       'Shows all sites currently added to quickpress')

  long_desc <<-END
    Will list all sites you've added with `qp new-site`.
    If no COUNT is given, will show all pages.
  END

  def list_sites
    Quickpress::list_sites
  end

  #  ___   ____  _     ____ _____  ____    __   _  _____  ____
  # | | \ | |_  | |   | |_   | |  | |_    ( (` | |  | |  | |_
  # |_|_/ |_|__ |_|__ |_|__  |_|  |_|__   _)_) |_|  |_|  |_|__
  #
  desc('delete-site ID',
       'Deletes site by ID')

  long_desc(<<-END)
    Deletes the site with numerical id equal to ID.

    To see IDs, use `qp list-sites`.

    You can specify multiple IDs, just make sure to
    keep them apart with commas.

    For example:

        $ qp delete-site "11,24,69"
  END

  def delete_site(ids)
    Quickpress::delete_site(ids)
  end
end

#  ___   ____  __    _   _
# | |_) | |_  / /`_ | | | |\ |
# |_|_) |_|__ \_\_/ |_| |_| \|
#
begin
  if ARGV.empty?
    puts <<-END.remove_trailing!
      quickpress v#{Quickpress::VERSION}
      Cheatsheet:

      	$ qp {new,delete}-{post,page}
      	$ qp list-(post|page)s

      Use `qp help` to see all commands.
      Also, try `qp help (command)`.
    END
    exit
  end

  Quickpress::config_init
  QP.start ARGV

  # Real mess of error-handling.
  # I wonder if there's a better way to do it.
  #
  # Well, at least I'm not polluting the whole code
  # with this `rescue` stuff.

rescue Net::ReadTimeout
  $stderr.puts <<-END.remove_trailing!

    * Connection took too long.
      Check your internet settings and try again.
  END
  exit 666

rescue XMLRPC::FaultException => e
  if e.message =~ /Incorrect username or password/

    $stderr.puts <<-END.remove_trailing!

      * Incorrect username or password.
    END

  else
    $stderr.puts
    $stderr.puts e.message
  end
  exit 666

rescue ArgumentError => arg
  if arg.message =~ /Wrong protocol specified/
    $stderr.puts <<-END.remove_trailing!
          * Wrong protocol at Wordpress site.
            Please use `http` or `https`.
        END
    exit 666
  end

rescue Interrupt => i
  $stderr.puts
  $stderr.puts "* You've interrupted me, mate"
  $stderr.puts i.backtrace
  exit 666

rescue StandardError => e

  if e.message =~ /Wrong content-type/
    $stderr.puts <<-END.remove_trailing!
          * This doesn't seem to be a Wordpress site.
            Check the address again.
        END
    exit 666

  elsif e.message =~ /Name or service not known/
    $stderr.puts <<-END.remove_trailing!

      * Connection error!
        Either site doesn't exist or there's
        something wrong with your internet connection.
    END

    if Quickpress::CLI::ask("Wanna retry?")
      puts
      retry
    end
    exit 666
  end

  $stderr.puts e
  $stderr.puts e.message
  $stderr.puts e.backtrace
  exit 666
end

